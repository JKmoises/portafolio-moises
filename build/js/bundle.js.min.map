{"version":3,"sources":["app.js"],"names":["hamburguerMenu","$menuBtn","document","querySelector","$menu","addEventListener","e","firstElementChild","classList","toggle","lastElementChild","target","matches","remove","add","contactForm","$form","$loader","$response","preventDefault","fetch","method","body","FormData","then","res","ok","json","Promise","reject","console","log","location","hash","reset","catch","err","message","statusText","innerHTML","status","finally","setTimeout","loadCurrentDate","year","Date","getFullYear","$currentYear","style","fontWeight","textContent","typedEffect","Typed","stringsElement","typeSpeed","startDelay","backSpeed","smartBackspace","shuffle","backDelay","loop","loopCount","showCursor","cursorChar","contentType"],"mappings":"AAOA,SAAAA,iBACA,MAAAC,EAAAC,SAAAC,cAAA,aACAC,EAAAF,SAAAC,cAAA,SAEAF,EAAAI,iBAAA,QAAAC,IAEAL,EAAAM,kBAAAC,UAAAC,OAAA,QACAR,EAAAS,iBAAAF,UAAAC,OAAA,QACAL,EAAAI,UAAAC,OAAA,eAGAP,SAAAG,iBAAA,QAAAC,IACAA,EAAAK,OAAAC,QAAA,aACAX,EAAAM,kBAAAC,UAAAK,OAAA,QACAZ,EAAAS,iBAAAF,UAAAM,IAAA,QACAV,EAAAI,UAAAK,OAAA,gBAMA,SAAAE,cACA,MAAAC,EAAAd,SAAAC,cAAA,iBACAc,EAAAf,SAAAC,cAAA,WACAe,EAAAhB,SAAAC,cAAA,0BAEAa,EAAAX,iBAAA,SAAAC,IACAA,EAAAa,iBACAF,EAAAT,UAAAK,OAAA,QAEAO,MAAA,mDAAA,CACAC,OAAA,OACAC,KAAA,IAAAC,SAAAjB,EAAAK,UAEAa,KAAAC,GAAAA,EAAAC,GAAAD,EAAAE,KAAAC,QAAAC,OAAAJ,IACAD,KAAAG,IACAG,QAAAC,IAAAJ,GACAV,EAAAT,UAAAM,IAAA,QACAkB,SAAAC,KAAA,WACAjB,EAAAkB,UAEAC,MAAAC,IACAN,QAAAC,IAAAK,GACA,IAAAC,EAAAD,EAAAE,YAAA,iDACApB,EAAAf,cAAA,MAAAoC,UAAA,SAAAH,EAAAI,WAAAH,MAEAI,QAAA,KACAxB,EAAAT,UAAAM,IAAA,QAEA4B,WAAA,KACAV,SAAAC,KAAA,UACA,SAKA,SAAAU,kBACA,IAAAC,GAAA,IAAAC,MAAAC,cACA,MAAAC,EAAA7C,SAAAC,cAAA,iBACA4C,EAAAC,MAAAC,WAAA,OACAF,EAAAG,YAAAN,EAGA,SAAAO,cACA,IAAAC,MAAA,SAAA,CACAC,eAAA,UACAC,UAAA,GACAC,WAAA,IACAC,UAAA,GACAC,gBAAA,EACAC,SAAA,EACAC,UAAA,KACAC,MAAA,EACAC,WAAA,EACAC,YAAA,EACAC,WAAA,IACAC,YAAA,SAnFA9D,SAAAG,iBAAA,mBAAA,KACA8C,cACAR,kBACA3C,iBACAe","file":"bundle.js","sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\r\n  typedEffect();\r\n  loadCurrentDate()\r\n  hamburguerMenu();\r\n  contactForm();\r\n});\r\n\r\nfunction hamburguerMenu() {\r\n  const $menuBtn = document.querySelector('.menu-btn');\r\n  const $menu = document.querySelector('.menu');\r\n\r\n  $menuBtn.addEventListener('click', e => {\r\n\r\n    $menuBtn.firstElementChild.classList.toggle('none');\r\n    $menuBtn.lastElementChild.classList.toggle('none');\r\n    $menu.classList.toggle('is-active');\r\n  });\r\n\r\n  document.addEventListener('click', e => {\r\n    if (e.target.matches('.menu a')) {\r\n      $menuBtn.firstElementChild.classList.remove('none');\r\n      $menuBtn.lastElementChild.classList.add('none');\r\n      $menu.classList.remove('is-active');\r\n    }\r\n  });\r\n\r\n}\r\n\r\nfunction contactForm() {\r\n  const $form = document.querySelector('.contact-form'),\r\n    $loader = document.querySelector('.loader'),\r\n    $response = document.querySelector('.contact-form-response');\r\n\r\n  $form.addEventListener(\"submit\", e => {\r\n    e.preventDefault();\r\n    $loader.classList.remove('none');\r\n\r\n    fetch(\"https://formsubmit.co/ajax/moi.prado20@gmail.com\", {\r\n      method: \"POST\",\r\n      body: new FormData(e.target)\r\n    })\r\n      .then(res => res.ok ? res.json : Promise.reject(res))\r\n      .then(json => {\r\n        console.log(json);\r\n        $loader.classList.add('none');\r\n        location.hash = \"#gracias\";\r\n        $form.reset();\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        let message = err.statusText || \"OcurriÃ³ un error al enviar, intenta nuevamente\";\r\n        $response.querySelector('h3').innerHTML = `Error ${err.status}: ${message}`;\r\n      })\r\n      .finally(() => {\r\n        $loader.classList.add('none');\r\n\r\n        setTimeout(() => {\r\n          location.hash = \"#close\";\r\n        }, 3000);\r\n      });\r\n  });\r\n}\r\n\r\nfunction loadCurrentDate() {\r\n  let year = new Date().getFullYear();\r\n  const $currentYear = document.querySelector('#current-year');\r\n  $currentYear.style.fontWeight = 'bold';\r\n  $currentYear.textContent = year;\r\n}\r\n\r\nfunction typedEffect() {\r\n  const typed = new Typed('.typed', {\r\n    stringsElement: '#titles',\r\n    typeSpeed: 75,\r\n    startDelay: 300,\r\n    backSpeed: 75,\r\n    smartBackspace: true,\r\n    shuffle: false,\r\n    backDelay: 1500,\r\n    loop: true,\r\n    loopCount: false,\r\n    showCursor: true,\r\n    cursorChar: '|',\r\n    contentType: 'html',\r\n  });\r\n}\r\n\r\n\r\n\r\n"]}